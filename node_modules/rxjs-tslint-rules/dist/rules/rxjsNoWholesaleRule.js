"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Lint = require("tslint");
var Rule = (function (_super) {
    tslib_1.__extends(Rule, _super);
    function Rule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Rule.prototype.apply = function (sourceFile) {
        return this.applyWithWalker(new Walker(sourceFile, this.getOptions()));
    };
    Rule.metadata = {
        description: "Disallows the wholesale importation of `rxjs` or `rxjs/Rx`.",
        options: null,
        optionsDescription: "Not configurable.",
        requiresTypeInfo: false,
        ruleName: "rxjs-no-wholesale",
        type: "functionality",
        typescriptOnly: false
    };
    Rule.FAILURE_STRING = "Wholesale RxJS imports are forbidden";
    return Rule;
}(Lint.Rules.AbstractRule));
exports.Rule = Rule;
var Walker = (function (_super) {
    tslib_1.__extends(Walker, _super);
    function Walker() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Walker.prototype.visitImportDeclaration = function (node) {
        var moduleSpecifier = node.moduleSpecifier.getText();
        if (/^['"]rxjs(\/Rx)?['"]/.test(moduleSpecifier)) {
            this.addFailureAtNode(node, Rule.FAILURE_STRING);
        }
        _super.prototype.visitImportDeclaration.call(this, node);
    };
    return Walker;
}(Lint.RuleWalker));
