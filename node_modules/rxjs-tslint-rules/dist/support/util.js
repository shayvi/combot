"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Lint = require("tslint");
var ts = require("typescript");
function couldBeType(type, name) {
    if (isReferenceType(type)) {
        type = type.target;
    }
    if (isType(type, name)) {
        return true;
    }
    if (isUnionType(type)) {
        return type.types.some(function (t) { return couldBeType(t, name); });
    }
    var baseTypes = type.getBaseTypes();
    return Boolean(baseTypes) && baseTypes.some(function (t) { return couldBeType(t, name); });
}
exports.couldBeType = couldBeType;
function isReferenceType(type) {
    return Lint.isTypeFlagSet(type, ts.TypeFlags.Object) &&
        Lint.isObjectFlagSet(type, ts.ObjectFlags.Reference);
}
exports.isReferenceType = isReferenceType;
function isType(type, name) {
    return Boolean(type.symbol) && type.symbol.name === name;
}
exports.isType = isType;
function isUnionType(type) {
    return Lint.isTypeFlagSet(type, ts.TypeFlags.Union);
}
exports.isUnionType = isUnionType;
